#!/bin/bash

DIR="`dirname \"$0\"`" 
DIR="`( cd \"$DIR\" && readlink -f $(pwd) )`"
echo "DIR: $DIR"
export APPDIR=$DIR

#export APPIMAGE_ORIGINAL_LD_PRELOAD=$LD_PRELOAD
#export LD_PRELOAD=$DIR/usr/lib/exec_wrapper.so
#export APPIMAGE_STARTUP_LD_PRELOAD=$LD_PRELOAD



export APPIMAGE_ORIGINAL_QML2_IMPORT_PATH=$QML2_IMPORT_PATH
export QML2_IMPORT_PATH=$DIR/usr/lib/qml:$QML2_IMPORT_PATH
export APPIMAGE_STARTUP_QML2_IMPORT_PATH=$QML2_IMPORT_PATH

export APPIMAGE_ORIGINAL_QT_PLUGIN_PATH=$QT_PLUGIN_PATH
export QT_PLUGIN_PATH=$DIR/usr/lib/qt5/plugins/
export APPIMAGE_STARTUP_QT_PLUGIN_PATH=$QT_PLUGIN_PATH

export APPIMAGE_ORIGINAL_GTK_PATH=$GTK_PATH
export GTK_PATH=$DIR/usr/lib/gtk-2.0 #:$GTK_PATH
echo "GTK_PATH=${GTK_PATH}"
export APPIMAGE_STARTUP_GTK_PATH=$GTK_PATH

export APPIMAGE_ORIGINAL_GTK_IM_MODULE_FILE=$GTK_IM_MODULE_FILE
export GTK_IM_MODULE_FILE=$DIR/usr/lib/gtk-2.0:$GTK_PATH
echo "GTK_IM_MODULE_FILE=${GTK_IM_MODULE_FILE}"
export APPIMAGE_STARTUP_GTK_IM_MODULE_FILE=$GTK_IM_MODULE_FILE

export APPIMAGE_ORIGINAL_PANGO_LIBDIR=$PANGO_LIBDIR
export PANGO_LIBDIR=$DIR/usr/lib
echo "PANGO_LIBDIR=${PANGO_LIBDIR}"
export APPIMAGE_STARTUP_PANGO_LIBDIR=$PANGO_LIBDIR

export APPIMAGE_ORIGINAL_PYTHONHOME=$PYTHONHOME
export PYTHONHOME=$DIR/usr/
export APPIMAGE_STARTUP_PYTHONHOME=$PYTHONHOME

export APPIMAGE_ORIGINAL_PATH=$PATH
export PATH=$DIR/usr/bin:$DIR/usr/sbin/:$DIR/usr/games/:$DIR/bin/:$DIR/sbin/:$PATH
export APPIMAGE_STARTUP_PATH=$PATH

export APPIMAGE_ORIGINAL_LD_LIBRARY_PATH=$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH=$DIR/usr/lib/:$DIR/usr/lib/i386-linux-gnu/:$DIR/usr/lib/x86_64-linux-gnu/:$DIR/usr/lib32/:$DIR/usr/lib64/:$DIR/lib/:$DIR/lib/i386-linux-gnu/:$DIR/lib/x86_64-linux-gnu/:$DIR/lib32/:$DIR/lib64/:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$DIR/usr/lib/:$DIR/usr/lib/gdk-pixbuf-2.0/loaders:$LD_LIBRARY_PATH
# libstdc++ version detection
stdcxxlib=$(ldconfig -p | grep 'libstdc++.so.6 (libc6,x86-64)'| awk 'NR==1{print $NF}')
echo "System stdc++ library: \"$stdcxxlib\""
stdcxxver1=$(strings "$stdcxxlib" | grep '^GLIBCXX_[0-9].[0-9]*' | cut -d"_" -f 2 | sort -V | tail -n 1)
echo "System stdc++ library version: \"$stdcxxver1\""
stdcxxver2=$(strings "$DIR/usr/optional/libstdc++/libstdc++.so.6" | grep '^GLIBCXX_[0-9].[0-9]*' | cut -d"_" -f 2 | sort -V | tail -n 1)
echo "Bundled stdc++ library version: \"$stdcxxver2\""
stdcxxnewest=$(echo "$stdcxxver1 $stdcxxver2" | tr " " "\n" | sort -V | tail -n 1)
echo "Newest stdc++ library version: \"$stdcxxnewest\""
if [ x"$stdcxxnewest" = x"$stdcxxver1" ]; then
   echo "Using system stdc++ library"
else
   echo "Using bundled stdc++ library"
   export LD_LIBRARY_PATH=$DIR/usr/optional/libstdc++:$LD_LIBRARY_PATH
fi
export APPIMAGE_STARTUP_LD_LIBRARY_PATH=$LD_LIBRARY_PATH

export APPIMAGE_ORIGINAL_PYTHONPATH=$PYTHONPATH
export PYTHONPATH=$DIR/usr/share/pyshared/:$PYTHONPATH
export APPIMAGE_STARTUP_PYTHONPATH=$PYTHONPATH

export APPIMAGE_ORIGINAL_XDG_DATA_DIRS=$XDG_DATA_DIRS
export XDG_DATA_DIRS=$DIR/usr/share/:$XDG_DATA_DIRS:/usr/local/share/:/usr/share/
export APPIMAGE_STARTUP_XDG_DATA_DIRS=$XDG_DATA_DIRS

export APPIMAGE_ORIGINAL_PERLLIB=$PERLLIB
export PERLLIB=$DIR/usr/share/perl5/:$DIR/usr/lib/perl5/:$PERLLIB
export APPIMAGE_STARTUP_PERLLIB=$PERLLIB

export APPIMAGE_ORIGINAL_GSETTINGS_SCHEMA_DIR=$GSETTINGS_SCHEMA_DIR
export GSETTINGS_SCHEMA_DIR=$DIR/usr/share/glib-2.0/schemas/:$GSETTINGS_SCHEMA_DIR
export APPIMAGE_STARTUP_GSETTINGS_SCHEMA_DIR=$GSETTINGS_SCHEMA_DIR

#export QT_PLUGIN_PATH=$DIR/usr/lib/qt4/plugins/:$DIR/usr/lib/i386-linux-gnu/qt4/plugins/:$DIR/usr/lib/x86_64-linux-gnu/qt4/plugins/:$DIR/usr/lib32/qt4/plugins/:$DIR/usr/lib64/qt4/plugins/:$DIR/usr/lib/qt5/plugins/:$DIR/usr/lib/i386-linux-gnu/qt5/plugins/:$DIR/usr/lib/x86_64-linux-gnu/qt5/plugins/:$DIR/usr/lib32/qt5/plugins/:$DIR/usr/lib64/qt5/plugins/:$QT_PLUGIN_PATH
export QT_PLUGIN_PATH=$DIR/usr/lib/qt5/plugins:$QT_PLUGIN_PATH
export APPIMAGE_STARTUP_QT_PLUGIN_PATH=$QT_PLUGIN_PATH

export APPIMAGE_ORIGINAL_GDK_PIXBUF_MODULEDIR=$GDK_PIXBUF_MODULEDIR
export GDK_PIXBUF_MODULEDIR=$DIR/usr/lib/gdk-pixbuf-2.0/loaders
export APPIMAGE_STARTUP_GDK_PIXBUF_MODULEDIR=$GDK_PIXBUF_MODULEDIR

export APPIMAGE_ORIGINAL_GDK_PIXBUF_MODULE_FILE=$GDK_PIXBUF_MODULE_FILE
export GDK_PIXBUF_MODULE_FILE=$DIR/usr/lib/gdk-pixbuf-2.0/loaders.cache
export APPIMAGE_STARTUP_GDK_PIXBUF_MODULE_FILE=$GDK_PIXBUF_MODULE_FILE
echo "GDK_PIXBUF_MODULEDIR: $GDK_PIXBUF_MODULEDIR"
echo "GDK_PIXBUF_MODULE_FILE: $GDK_PIXBUF_MODULE_FILE"
cat $GDK_PIXBUF_MODULE_FILE

if [ -e /etc/fonts/fonts.conf ]; then
  export FONTCONFIG_PATH=/etc/fonts
fi

if [ -e /usr/share/X11/xkb ]; then
  export XKB_CONFIG_ROOT=/usr/share/X11/xkb
  export QT_XKB_CONFIG_ROOT=/usr/share/X11/xkb
fi

export KDE_FORK_SLAVES=1

export KDEV_DISABLE_PLUGINS=KDevWelcomePage

#cd $DIR/usr

echo "Input parameters: \"$@\""
echo ""
echo "Input File: $1"
ldd "$DIR/usr/bin/hugin"
echo ""
echo "$DIR/usr/bin/hugin \"$@\""
"$DIR/usr/bin/hugin" "$@"
